{"version":3,"sources":["Button.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,yDAAyC;AAEzC,yCAAoC;AACpC,yCAA4B;AAEf,QAAA,MAAM,GAAG,UAAC,EAA0E;;IAAxE,IAAA,0BAAU,EAAE,aAAc,EAAd,mCAAc,EAAE,sBAAQ,EAAE,wBAAS,EAAE,oEAAQ;IACjF,OAAO,CACN,yCACC,SAAS,EAAE,uBAAE,CAAC,8BAAM,CAAC,MAAM,EAAE,SAAS;YACrC,GAAC,8BAAM,CAAC,OAAO,IAAG,UAAU,IAAI,SAAS;YACzC,GAAC,8BAAM,CAAC,KAAK,IAAG,UAAU,IAAI,OAAO;gBACpC,IACE,KAAK;QAER,QAAQ;QACR,KAAK,IAAI,MAAM,IAAI,8BAAM,SAAS,EAAE,uBAAE,CAAC,8BAAM,CAAC,KAAK;gBACnD,GAAC,8BAAM,CAAC,IAAI,IAAG,KAAK,IAAI,MAAM;oBAC7B;YACD,oBAAC,sBAAS,OAAG,CACP,CACC,CACT,CAAC;AACH,CAAC,CAAC","file":"Button.js","sourcesContent":["import styles from './Button.module.css';\nimport { ButtonProps } from './Button.props';\nimport ArrowIcon from './arrow.svg';\nimport cn from 'classnames';\n\nexport const Button = ({ appearance, arrow = 'none', children, className, ...props }: ButtonProps): JSX.Element => {\n\treturn (\n\t\t<button\n\t\t\tclassName={cn(styles.button, className, {\n\t\t\t\t[styles.primary]: appearance == 'primary',\n\t\t\t\t[styles.ghost]: appearance == 'ghost',\n\t\t\t})}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t\t{arrow != 'none' && <span className={cn(styles.arrow, {\n\t\t\t\t[styles.down]: arrow == 'down'\n\t\t\t})}>\n\t\t\t\t<ArrowIcon />\n\t\t\t</span>}\n\t\t</button>\n\t);\n};"]}